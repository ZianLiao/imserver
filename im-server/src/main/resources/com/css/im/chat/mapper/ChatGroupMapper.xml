<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.css.im.chat.mapper.ChatGroupMapper">
    <resultMap id="BaseResultMap" type="com.css.im.chat.model.ChatGroup">
        <id column="chat_group_id" jdbcType="VARCHAR" property="chatGroupId"/>
        <result column="chat_group_name" jdbcType="VARCHAR" property="chatGroupName"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="chat_type" jdbcType="SMALLINT" property="chatType"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.css.im.chat.model.ChatGroup">
        <result column="members_uids" jdbcType="LONGVARCHAR" property="membersUids"/>
    </resultMap>
    <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithCreateUserName" type="com.css.im.chat.model.ChatGroup">
        <result column="create_user_name" property="createUserName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    chat_group_id, chat_group_name, create_time, chat_type, create_user_id, status
  </sql>
    <sql id="Blob_Column_List">
    members_uids
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.css.im.chat.model.ChatGroupExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from chat_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.css.im.chat.model.ChatGroupExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from chat_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from chat_group
        where chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_group
    where chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.css.im.chat.model.ChatGroupExample">
        delete from chat_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.css.im.chat.model.ChatGroup">
    insert into chat_group (chat_group_id, chat_group_name, create_time, 
      chat_type, create_user_id, status, 
      members_uids)
    values (#{chatGroupId,jdbcType=VARCHAR}, #{chatGroupName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{chatType,jdbcType=SMALLINT}, #{createUserId,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{membersUids,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.css.im.chat.model.ChatGroup">
        insert into chat_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="chatGroupId != null">
                chat_group_id,
            </if>
            <if test="chatGroupName != null">
                chat_group_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="chatType != null">
                chat_type,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="membersUids != null">
                members_uids,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="chatGroupId != null">
                #{chatGroupId,jdbcType=VARCHAR},
            </if>
            <if test="chatGroupName != null">
                #{chatGroupName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="chatType != null">
                #{chatType,jdbcType=SMALLINT},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="membersUids != null">
                #{membersUids,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.css.im.chat.model.ChatGroupExample" resultType="java.lang.Long">
        select count(*) from chat_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update chat_group
        <set>
            <if test="record.chatGroupId != null">
                chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
            </if>
            <if test="record.chatGroupName != null">
                chat_group_name = #{record.chatGroupName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=VARCHAR},
            </if>
            <if test="record.chatType != null">
                chat_type = #{record.chatType,jdbcType=SMALLINT},
            </if>
            <if test="record.createUserId != null">
                create_user_id = #{record.createUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=SMALLINT},
            </if>
            <if test="record.membersUids != null">
                members_uids = #{record.membersUids,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update chat_group
        set chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
        chat_group_name = #{record.chatGroupName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=VARCHAR},
        chat_type = #{record.chatType,jdbcType=SMALLINT},
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=SMALLINT},
        members_uids = #{record.membersUids,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update chat_group
        set chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
        chat_group_name = #{record.chatGroupName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=VARCHAR},
        chat_type = #{record.chatType,jdbcType=SMALLINT},
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.css.im.chat.model.ChatGroup">
        update chat_group
        <set>
            <if test="chatGroupName != null">
                chat_group_name = #{chatGroupName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="chatType != null">
                chat_type = #{chatType,jdbcType=SMALLINT},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="membersUids != null">
                members_uids = #{membersUids,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.css.im.chat.model.ChatGroup">
    update chat_group
    set chat_group_name = #{chatGroupName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      chat_type = #{chatType,jdbcType=SMALLINT},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      members_uids = #{membersUids,jdbcType=LONGVARCHAR}
    where chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.css.im.chat.model.ChatGroup">
    update chat_group
    set chat_group_name = #{chatGroupName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      chat_type = #{chatType,jdbcType=SMALLINT},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT}
    where chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
  </update>

    <select id="queryByMemberId" resultMap="ResultMapWithCreateUserName" parameterType="String">
    SELECT
    c.*, s.name AS create_user_name
    FROM chat_group c, sys_user s
    WHERE c.create_user_id = s.user_id
    AND c.status &lt;&gt; -1
    AND c.members_uids LIKE '%${userId}%';
  </select>
</mapper>