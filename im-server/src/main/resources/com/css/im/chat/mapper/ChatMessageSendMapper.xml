<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.css.im.chat.mapper.ChatMessageSendMapper">
    <resultMap id="BaseResultMap" type="com.css.im.chat.model.ChatMessageSend">
        <id column="msg_id" jdbcType="VARCHAR" property="msgId"/>
        <result column="from_uid" jdbcType="VARCHAR" property="fromUid"/>
        <result column="to_uid" jdbcType="VARCHAR" property="toUid"/>
        <result column="msg_time" jdbcType="VARCHAR" property="msgTime"/>
        <result column="msg_seq" jdbcType="VARCHAR" property="msgSeq"/>
        <result column="content_type" jdbcType="SMALLINT" property="contentType"/>
        <result column="file_id" jdbcType="VARCHAR" property="fileId"/>
        <result column="chat_group_id" jdbcType="VARCHAR" property="chatGroupId"/>
        <result column="recall" jdbcType="SMALLINT" property="recall"/>
        <result column="chat_type" jdbcType="INTEGER" property="chatType"/>
        <result column="plain_text" jdbcType="VARCHAR" property="plainText"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.css.im.chat.model.ChatMessageSend">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    msg_id, from_uid, to_uid, msg_time, msg_seq, content_type, file_id, chat_group_id, 
    recall, chat_type, plain_text
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.css.im.chat.model.ChatMessageSendExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from chat_message_send
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.css.im.chat.model.ChatMessageSendExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from chat_message_send
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from chat_message_send
        where msg_id = #{msgId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_message_send
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.css.im.chat.model.ChatMessageSendExample">
        delete from chat_message_send
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.css.im.chat.model.ChatMessageSend">
    insert into chat_message_send (msg_id, from_uid, to_uid, 
      msg_time, msg_seq, content_type, 
      file_id, chat_group_id, recall, 
      chat_type, plain_text, content
      )
    values (#{msgId,jdbcType=VARCHAR}, #{fromUid,jdbcType=VARCHAR}, #{toUid,jdbcType=VARCHAR}, 
      #{msgTime,jdbcType=VARCHAR}, #{msgSeq,jdbcType=VARCHAR}, #{contentType,jdbcType=SMALLINT}, 
      #{fileId,jdbcType=VARCHAR}, #{chatGroupId,jdbcType=VARCHAR}, #{recall,jdbcType=SMALLINT}, 
      #{chatType,jdbcType=INTEGER}, #{plainText,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.css.im.chat.model.ChatMessageSend">
        insert into chat_message_send
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                msg_id,
            </if>
            <if test="fromUid != null">
                from_uid,
            </if>
            <if test="toUid != null">
                to_uid,
            </if>
            <if test="msgTime != null">
                msg_time,
            </if>
            <if test="msgSeq != null">
                msg_seq,
            </if>
            <if test="contentType != null">
                content_type,
            </if>
            <if test="fileId != null">
                file_id,
            </if>
            <if test="chatGroupId != null">
                chat_group_id,
            </if>
            <if test="recall != null">
                recall,
            </if>
            <if test="chatType != null">
                chat_type,
            </if>
            <if test="plainText != null">
                plain_text,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                #{msgId,jdbcType=VARCHAR},
            </if>
            <if test="fromUid != null">
                #{fromUid,jdbcType=VARCHAR},
            </if>
            <if test="toUid != null">
                #{toUid,jdbcType=VARCHAR},
            </if>
            <if test="msgTime != null">
                #{msgTime,jdbcType=VARCHAR},
            </if>
            <if test="msgSeq != null">
                #{msgSeq,jdbcType=VARCHAR},
            </if>
            <if test="contentType != null">
                #{contentType,jdbcType=SMALLINT},
            </if>
            <if test="fileId != null">
                #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="chatGroupId != null">
                #{chatGroupId,jdbcType=VARCHAR},
            </if>
            <if test="recall != null">
                #{recall,jdbcType=SMALLINT},
            </if>
            <if test="chatType != null">
                #{chatType,jdbcType=INTEGER},
            </if>
            <if test="plainText != null">
                #{plainText,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.css.im.chat.model.ChatMessageSendExample"
            resultType="java.lang.Long">
        select count(*) from chat_message_send
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update chat_message_send
        <set>
            <if test="record.msgId != null">
                msg_id = #{record.msgId,jdbcType=VARCHAR},
            </if>
            <if test="record.fromUid != null">
                from_uid = #{record.fromUid,jdbcType=VARCHAR},
            </if>
            <if test="record.toUid != null">
                to_uid = #{record.toUid,jdbcType=VARCHAR},
            </if>
            <if test="record.msgTime != null">
                msg_time = #{record.msgTime,jdbcType=VARCHAR},
            </if>
            <if test="record.msgSeq != null">
                msg_seq = #{record.msgSeq,jdbcType=VARCHAR},
            </if>
            <if test="record.contentType != null">
                content_type = #{record.contentType,jdbcType=SMALLINT},
            </if>
            <if test="record.fileId != null">
                file_id = #{record.fileId,jdbcType=VARCHAR},
            </if>
            <if test="record.chatGroupId != null">
                chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
            </if>
            <if test="record.recall != null">
                recall = #{record.recall,jdbcType=SMALLINT},
            </if>
            <if test="record.chatType != null">
                chat_type = #{record.chatType,jdbcType=INTEGER},
            </if>
            <if test="record.plainText != null">
                plain_text = #{record.plainText,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update chat_message_send
        set msg_id = #{record.msgId,jdbcType=VARCHAR},
        from_uid = #{record.fromUid,jdbcType=VARCHAR},
        to_uid = #{record.toUid,jdbcType=VARCHAR},
        msg_time = #{record.msgTime,jdbcType=VARCHAR},
        msg_seq = #{record.msgSeq,jdbcType=VARCHAR},
        content_type = #{record.contentType,jdbcType=SMALLINT},
        file_id = #{record.fileId,jdbcType=VARCHAR},
        chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
        recall = #{record.recall,jdbcType=SMALLINT},
        chat_type = #{record.chatType,jdbcType=INTEGER},
        plain_text = #{record.plainText,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update chat_message_send
        set msg_id = #{record.msgId,jdbcType=VARCHAR},
        from_uid = #{record.fromUid,jdbcType=VARCHAR},
        to_uid = #{record.toUid,jdbcType=VARCHAR},
        msg_time = #{record.msgTime,jdbcType=VARCHAR},
        msg_seq = #{record.msgSeq,jdbcType=VARCHAR},
        content_type = #{record.contentType,jdbcType=SMALLINT},
        file_id = #{record.fileId,jdbcType=VARCHAR},
        chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
        recall = #{record.recall,jdbcType=SMALLINT},
        chat_type = #{record.chatType,jdbcType=INTEGER},
        plain_text = #{record.plainText,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.css.im.chat.model.ChatMessageSend">
        update chat_message_send
        <set>
            <if test="fromUid != null">
                from_uid = #{fromUid,jdbcType=VARCHAR},
            </if>
            <if test="toUid != null">
                to_uid = #{toUid,jdbcType=VARCHAR},
            </if>
            <if test="msgTime != null">
                msg_time = #{msgTime,jdbcType=VARCHAR},
            </if>
            <if test="msgSeq != null">
                msg_seq = #{msgSeq,jdbcType=VARCHAR},
            </if>
            <if test="contentType != null">
                content_type = #{contentType,jdbcType=SMALLINT},
            </if>
            <if test="fileId != null">
                file_id = #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="chatGroupId != null">
                chat_group_id = #{chatGroupId,jdbcType=VARCHAR},
            </if>
            <if test="recall != null">
                recall = #{recall,jdbcType=SMALLINT},
            </if>
            <if test="chatType != null">
                chat_type = #{chatType,jdbcType=INTEGER},
            </if>
            <if test="plainText != null">
                plain_text = #{plainText,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where msg_id = #{msgId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.css.im.chat.model.ChatMessageSend">
    update chat_message_send
    set from_uid = #{fromUid,jdbcType=VARCHAR},
      to_uid = #{toUid,jdbcType=VARCHAR},
      msg_time = #{msgTime,jdbcType=VARCHAR},
      msg_seq = #{msgSeq,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=SMALLINT},
      file_id = #{fileId,jdbcType=VARCHAR},
      chat_group_id = #{chatGroupId,jdbcType=VARCHAR},
      recall = #{recall,jdbcType=SMALLINT},
      chat_type = #{chatType,jdbcType=INTEGER},
      plain_text = #{plainText,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.css.im.chat.model.ChatMessageSend">
    update chat_message_send
    set from_uid = #{fromUid,jdbcType=VARCHAR},
      to_uid = #{toUid,jdbcType=VARCHAR},
      msg_time = #{msgTime,jdbcType=VARCHAR},
      msg_seq = #{msgSeq,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=SMALLINT},
      file_id = #{fileId,jdbcType=VARCHAR},
      chat_group_id = #{chatGroupId,jdbcType=VARCHAR},
      recall = #{recall,jdbcType=SMALLINT},
      chat_type = #{chatType,jdbcType=INTEGER},
      plain_text = #{plainText,jdbcType=VARCHAR}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>

    <select id="queryMsgSendList" resultMap="ResultMapWithBLOBs">
        select msg_id, from_uid, to_uid,
        msg_time, msg_seq, content_type,
        file_id, chat_group_id, recall,
        chat_type, plain_text
        FROM
        chat_message_send
        <where>
            <choose>
                <when test="isFile">
                    AND file_id IS NOT NULL
                </when>
                <otherwise>
                    AND file_id IS NULL
                </otherwise>
            </choose>
            AND
            from_uid = #{senderId}
            AND
            chat_group_id = #{groupId}
        </where>
        ORDER BY msg_seq
        LIMIT #{rowIndex},#{pageSize};
    </select>
</mapper>