<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.css.im.file.mapper.FileItemMapper">
  <resultMap id="BaseResultMap" type="com.css.im.file.model.FileItem">
    <id column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="INTEGER" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="receive_user" jdbcType="VARCHAR" property="receiveUser" />
    <result column="chat_group_id" jdbcType="VARCHAR" property="chatGroupId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.css.im.file.model.FileItem">
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
    <result column="url" jdbcType="LONGVARCHAR" property="url" />
    <result column="md5" jdbcType="LONGVARCHAR" property="md5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_id, file_name, file_size, file_type, create_time, status, create_user, receive_user, 
    chat_group_id
  </sql>
  <sql id="Blob_Column_List">
    path, url, md5
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.css.im.file.model.FileItemExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.css.im.file.model.FileItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_item
    where file_id = #{fileId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file_item
    where file_id = #{fileId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.css.im.file.model.FileItemExample">
    delete from file_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.css.im.file.model.FileItem">
    insert into file_item (file_id, file_name, file_size, 
      file_type, create_time, status, 
      create_user, receive_user, chat_group_id, 
      path, url, md5
      )
    values (#{fileId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=INTEGER}, 
      #{fileType,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{createUser,jdbcType=VARCHAR}, #{receiveUser,jdbcType=VARCHAR}, #{chatGroupId,jdbcType=VARCHAR}, 
      #{path,jdbcType=LONGVARCHAR}, #{url,jdbcType=LONGVARCHAR}, #{md5,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.css.im.file.model.FileItem">
    insert into file_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="receiveUser != null">
        receive_user,
      </if>
      <if test="chatGroupId != null">
        chat_group_id,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="md5 != null">
        md5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null">
        #{receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="chatGroupId != null">
        #{chatGroupId,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="md5 != null">
        #{md5,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.css.im.file.model.FileItemExample" resultType="java.lang.Long">
    select count(*) from file_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file_item
    <set>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=INTEGER},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUser != null">
        receive_user = #{record.receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.chatGroupId != null">
        chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.md5 != null">
        md5 = #{record.md5,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update file_item
    set file_id = #{record.fileId,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=INTEGER},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      receive_user = #{record.receiveUser,jdbcType=VARCHAR},
      chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=LONGVARCHAR},
      url = #{record.url,jdbcType=LONGVARCHAR},
      md5 = #{record.md5,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file_item
    set file_id = #{record.fileId,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=INTEGER},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      receive_user = #{record.receiveUser,jdbcType=VARCHAR},
      chat_group_id = #{record.chatGroupId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.css.im.file.model.FileItem">
    update file_item
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null">
        receive_user = #{receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="chatGroupId != null">
        chat_group_id = #{chatGroupId,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="md5 != null">
        md5 = #{md5,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.css.im.file.model.FileItem">
    update file_item
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      receive_user = #{receiveUser,jdbcType=VARCHAR},
      chat_group_id = #{chatGroupId,jdbcType=VARCHAR},
      path = #{path,jdbcType=LONGVARCHAR},
      url = #{url,jdbcType=LONGVARCHAR},
      md5 = #{md5,jdbcType=LONGVARCHAR}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.css.im.file.model.FileItem">
    update file_item
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      receive_user = #{receiveUser,jdbcType=VARCHAR},
      chat_group_id = #{chatGroupId,jdbcType=VARCHAR}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
</mapper>